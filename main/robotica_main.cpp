/* Hello World Example

   This example code is in the Public Domain (or CC0 licensed, at your option.)

   Unless required by applicable law or agreed to in writing, this
   software is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
   CONDITIONS OF ANY KIND, either express or implied.
*/
#include <stdio.h>
#include "driver/gpio.h"
#include "freertos/FreeRTOS.h"
#include "freertos/task.h"
#include "esp_system.h"
#include "esp_spi_flash.h"
#include "stepperA4988.h"
#include "servomotor.h"
#include "matrix.h"
#include "wifi.h"
#include "mp_pi.h"
#include "pid.h"
#include "pwm.h"
#include "encoder.h"
#include "ultrassonic.h"

// gpio_num_t stepPinMotor1 = GPIO_NUM_22, directionPinMotor1 = GPIO_NUM_23, servoPin = GPIO_NUM_21;
// stepperA4988 motor1(stepPinMotor1, directionPinMotor1);
// servomotor garra(servoPin);
PWM pwm(GPIO_NUM_18,500);
// Encoder encode(GPIO_NUM_4);
Ultrassonic distacia(GPIO_NUM_22,GPIO_NUM_23);
ControlHandler::PID pid("1, 0.2, 0");
// void controlMotor(void*arg)
// {
//     while(1)
//         garra.setPosition(500);
// }

// void stepControlMotor(void*arg)
// {
//     while(1)
//         motor1.newStep();
// }
double pidReference = 0;

void testeReceberWifi(const char* dadosRecebidos)
{
  LinAlg::Matrix<double> receivedData = dadosRecebidos;
  // pwm.update(receivedData(0,0));
  // if(receivedData.getNumberOfColumns() > 1)
    pidReference = receivedData(0,0);

  // ControlHandler::MP_PI<long double> pi;
  // pi.setControllerParameters(pi.setRestrictions(dadosRecebidos));
  // long double y = 1.0, h = 0.1, tau = 3.745318352059925, u = 0.0, k = 3.120973782771535;
  // for(uint16_t i = 0; i < 500; ++i)
  // {
    // y += (h/tau)*(k*u-y);
    // u = pi.OutputControl(0.0,y);
    // std::cout << u << " , " << y << std::endl;
  // }
}

extern "C" void app_main()
{   
  wifi_TCP_server_init(testeReceberWifi);
  // const char* dados = "1,0,2;0.9951667125,0.09819986926,1.974539795;-0.6820114954,-0.7313414525,-0.0588964967;0.08165054273,0.99666102,0.08382719279R1,0,2;-0.9987633977,-0.04971594767,0;0.6820114954,0.7313414525,0.0588964967;-0.6820114954,-0.7313414525,0.0588964967R0.9815584546,0.1911622355,1.940081663;-0.08165054273,-0.99666102,-0.08382719279;0.04057717858,0.9991764071,0.08421228879R-1,0,2;0.9987633977,0.04971594767,0;0.6820114954,0.7313414525,0.0588964967;-0.6820114954,-0.7313414525,0.0588964967R1,0,2;0,-1,2;0.6820114954,0.7313414525,-0.0588964967;-0.9843077679,-0.1764602452,0.01076463203R0.9608650486,0.277016892,1.899544113;-0.04057717858,-0.9991764071,-0.08421228879;-0.002103421618,0.9999977878,0.0844610784R0,1,2;-1,0,2;-0.6820114954,-0.7313414525,-0.0588964967;0.9843077679,0.1764602452,0.01076463203R-1,0,2;-0.9951667125,-0.09819986926,1.974539795;0.6820114954,0.7313414525,-0.0588964967;-0.08165054273,-0.99666102,0.08382719279R0,-1,2;0.9843077679,0.1764602452,-0.01076463203;-0.9852144793,-0.171325508,0.01032717936R0.9349757617,0.3547116084,1.855905454;0.002103421618,-0.9999977878,-0.0844610784;-0.04677861178,0.9989052815,0.08455662053R0,1,2;-0.9843077679,-0.1764602452,-0.01076463203;0.9852144793,0.171325508,0.01032717936R-0.9815584546,-0.1911622355,1.940081663;0.08165054273,0.99666102,-0.08382719279;-0.04057717858,-0.9991764071,0.08421228879R0,-1,2;-0.5029213675,-0.8643321688,1.645403131;-0.9969352984,-0.07823049739,0.002415807829;0.9852144793,0.171325508,-0.01032717936R0.9056982916,0.4239228758,1.811806356;0.04677861178,-0.9989052815,-0.08455662053;-0.09385997319,0.9955854084,0.08447417128R0,1,2;0.5029213675,0.8643321688,1.645403131;0.9969352984,0.07823049739,0.002415807829;-0.9852144793,-0.171325508,-0.01032717936R-0.9608650486,-0.277016892,1.899544113;0.04057717858,0.9991764071,-0.08421228879;0.002103421618,-0.9999977878,0.0844610784R-0.5151513853,-0.8570992068,1.629102567;-0.9997103253,0.02406793476,-0.006235208358;0.9969352984,0.07823049739,-0.002415807829R0.8745834453,0.4848750326,1.76933923;0.09385997319,-0.9955854084,-0.08447417128;-0.1437772588,0.9896100746,0.08417938368R0.5151513853,0.8570992068,1.629102567;0.9997103253,-0.02406793476,-0.006235208358;-0.9969352984,-0.07823049739,-0.002415807829R-0.9349757617,-0.3547116084,1.855905454;-0.002103421618,0.9999977878,-0.0844610784;0.04677861178,-0.9989052815,0.08455662053R-0.5282277855,-0.8491027067,1.614600174;-0.9910207575,0.1337081084,-0.01545805719;0.9997103253,-0.02406793476,0.006235208358R0.8428537936,0.538142623,1.730000833;0.1437772588,-0.9896100746,-0.08417938368;-0.1969645301,0.9804106149,0.08362605731R0.5282277855,0.8491027067,1.614600174;0.9910207575,-0.1337081084,-0.01545805719;-0.9997103253,0.02406793476,0.006235208358R-0.9056982916,-0.4239228758,1.811806356;-0.04677861178,0.9989052815,-0.08455662053;0.09385997319,-0.9955854084,0.08447417128R-0.542224238,-0.8402338221,1.602073543;-0.9688677677,0.2475787729,-0.02498158327;0.9910207575,-0.1337081084,0.01545805719R0.8114066308,0.5844820609,1.694749282;0.1969645301,-0.9804106149,-0.08362605731;-0.2538337397,0.9672478651,0.08275349972R0.542224238,0.8402338221,1.602073543;0.9688677677,-0.2475787729,-0.02498158327;-0.9910207575,0.1337081084,0.01545805719R-0.8745834453,-0.4848750326,1.76933923;-0.09385997319,0.9955854084,-0.08447417128;0.1437772588,-0.9896100746,0.08417938368R-0.5572204128,-0.8303646257,1.591719084;-0.9323537025,0.3615474705,-0.03445301696;0.9688677677,-0.2475787729,0.02498158327R0.7808572653,0.6247094775,1.664108383;0.2538337397,-0.9672478651,-0.08275349972;-0.3147291716,0.9491815151,0.08148374678R0.5572204128,0.8303646257,1.591719084;0.9323537025,-0.3615474705,-0.03445301696;-0.9688677677,0.2475787729,0.02498158327R-0.8428537936,-0.538142623,1.730000833;-0.1437772588,0.9896100746,-0.08417938368;0.1969645301,-0.9804106149,0.08362605731R-0.5733017449,-0.8193443167,1.583753411;-0.8820923979,0.4710764287,-0.04349171282;0.9323537025,-0.3615474705,0.03445301696R0.7515966522,0.6596229775,1.638279883;0.3147291716,-0.9491815151,-0.08148374678;-0.3798545249,0.9250462366,0.07971924R0.5733017449,0.8193443167,1.583753411;0.8820923979,-0.4710764287,-0.04349171283;-0.9323537025,0.3615474705,0.03445301696R-0.8114066308,-0.5844820609,1.694749282;-0.1969645301,0.9804106149,-0.08362605731;0.2538337397,-0.9672478651,0.08275349972R-0.5905587384,-0.806994657,1.578414355;-0.8202136431,0.572057322,-0.05175966611;0.8820923979,-0.4710764287,0.04349171282R0.7238478899,0.6899595874,1.61724287;0.3798545249,-0.9250462366,-0.07971924;-0.4491644581,0.8934490974,0.07734215226R0.5905587384,0.806994657,1.578414355;0.8202136431,-0.572057322,-0.05175966611;-0.8820923979,0.4710764287,0.04349171282R-0.7808572653,-0.6247094775,1.664108383;-0.2538337397,0.9672478651,-0.08275349972;0.3147291716,-0.9491815151,0.08148374678R-0.6090855633,-0.7931045181,1.575961266;-0.7499140929,0.6615352245,-0.05902076436;0.8202136431,-0.572057322,0.05175966611R0.6977144418,0.7163759891,1.600832797;0.4491644581,-0.8934490974,-0.07734215226;-0.5222170668,0.8528126026,0.07421740262R0.6090855633,0.7931045181,1.575961266;0.7499140929,-0.6615352245,-0.05902076436;-0.8202136431,0.572057322,0.05175966611R-0.7515966522,-0.6596229775,1.638279883;-0.3147291716,0.9491815151,-0.08148374678;0.3798545249,-0.9250462366,0.07971924R-0.6289775859,-0.7774234345,1.576674102;-0.6747533773,0.7380432778,-0.0651660919;0.7499140929,-0.6615352245,0.05902076436R0.6732181001,0.7394439734,1.588799958;0.5222170668,-0.8528126026,-0.07421740262;-0.5979978008,0.8014977419,0.07020230768R0.6289775859,0.7774234345,1.576674102;0.6747533773,-0.7380432778,-0.0651660919;-0.7499140929,0.6615352245,0.05902076436R-0.7238478899,-0.6899595874,1.61724287;-0.3798545249,0.9250462366,-0.07971924;0.4491644581,-0.8934490974,0.07734215226R-0.6503273226,-0.7596541144,1.580850534;-0.5979978008,0.8014977419,-0.07020230768;0.6747533773,-0.7380432778,0.0651660919R0.6503273226,0.7596541144,1.580850534;0.5979978008,-0.8014977419,-0.07020230768;-0.6747533773,0.7380432778,0.0651660919R-0.6977144418,-0.7163759891,1.600832797;-0.4491644581,0.8934490974,-0.07734215226;0.5222170668,-0.8528126026,0.07421740262R-0.6732181001,-0.7394439734,1.588799958;-0.5222170668,0.8528126026,-0.07421740262;0.5979978008,-0.8014977419,0.07020230768R0,-4.445191003e-18,1;0.5,0.04933840131,-0.002064832178C11.57983129,12.4174016,0;0.4760895917,0.02369855091,0C1.318291847e-16,2.038148579e-17,1;0.5039993192,0.09815578084,-0.006170765693C11.57983129,12.4174016,0;-0.4760895917,-0.02369855091,0C0,-1.383110815e-17,-1;0,-0.4868266469,-0.04111368981C9.365667521e-17,-7.804722934e-18,1;0.5059366692,0.1458612777,-0.01019146619C0,-1.383110815e-17,1;0,0.4868266469,-0.04111368981C0,-4.445191003e-18,-1;-0.5,-0.04933840131,-0.002064832178C6.929646644e-18,-2.771858658e-17,-1;-0.3056523705,-0.5416220005,-0.04445637937C-8.323671723e-17,-5.202294827e-18,1;0.505839818,0.1919057828,-0.01408044335C3.464823322e-17,6.23668198e-17,1;0.3056523705,0.5416220005,-0.04445637937C1.318291847e-16,2.038148579e-17,-1;-0.5039993192,-0.09815578084,-0.006170765693C2.42524533e-17,6.929272372e-18,-1;-0.3162178954,-0.54345931,-0.04456712893C-6.935075358e-17,-2.947407027e-17,1;0.5037841553,0.2358021759,-0.01779624176C-3.464636186e-18,-1.385854474e-17,1;0.3162178954,0.54345931,-0.04456712893C9.365667521e-17,-7.804722934e-18,-1;-0.5059366692,-0.1458612777,-0.01019146619C-1.385780442e-17,3.464451105e-17,-1;-0.3271570225,-0.5443177141,-0.04459363699C-6.240320134e-17,3.466844519e-17,1;0.4998869161,0.2771407189,-0.0213037652C3.464451105e-18,2.078670663e-17,1;0.3271570225,0.5443177141,-0.04459363699C2.427737586e-17,3.815016206e-17,-1;-0.505839818,-0.1919057828,-0.01408044335C3.464271293e-18,-2.078562776e-17,-1;-0.3384515275,-0.5440457999,-0.044523193C-3.466165482e-17,3.466165482e-18,1;0.4942994709,0.315598762,-0.02457512879C0,-4.157125551e-17,1;0.3384515275,0.5440457999,-0.044523193C4.161045215e-17,2.427276375e-17,-1;-0.5037841553,-0.2358021759,-0.01779624176C1.385640314e-17,0,-1;-0.3500745944,-0.5424776206,-0.04434189505C2.079322982e-17,-1.039661491e-17,1;0.4871984902,0.3509446026,-0.02759002199C4.50333102e-17,6.92820157e-17,1;0.3500745944,0.5424776206,-0.04434189505C-5.54695123e-17,-5.200266778e-17,-1;-0.4998869161,-0.2771407189,-0.0213037652C5.542311326e-17,2.771155663e-17,-1;-0.3619892723,-0.5394330139,-0.04403468334C-2.078993273e-17,2.078993273e-17,1;0.4787767958,0.3830359468,-0.03033561713C-2.078366747e-17,-3.463944579e-17,1;0.3619892723,0.5394330139,-0.04403468334C7.62556406e-17,-2.426315837e-17,-1;-0.4942994709,-0.315598762,-0.02457512879C3.463808752e-17,-1.385523501e-17,-1;-0.374146837,-0.5347185619,-0.04358542811C-3.46453147e-17,-6.929062941e-18,1;0.4692346202,0.4118138851,-0.03280609743C-3.463808752e-18,-6.234855754e-17,1;0.374146837,0.5347185619,-0.04358542811C3.465538303e-17,0,-1;-0.4871984902,-0.3509446026,-0.02759002199C-3.463700567e-17,3.463700567e-17,-1;-0.38648511,-0.5281293774,-0.0429770875C2.77133715e-17,2.078502863e-17,1;0.4587718253,0.4372935581,-0.03500190137C-6.927401135e-18,-1.385480227e-17,1;0.38648511,0.5281293774,-0.0429770875C-6.929977576e-18,-1.385995515e-17,-1;-0.4787767958,-0.3830359468,-0.03033561713C5.541805618e-17,6.927257022e-17,-1;-0.3989268201,-0.519451917,-0.0421919521C-7.620594619e-17,-8.313375948e-17,1;0.4475814383,0.4595527573,-0.03692878717C4.849079916e-17,4.156354213e-17,1;0.3989268201,0.519451917,-0.0421919521C-4.850344059e-17,4.850344059e-17,-1;-0.4692346202,-0.4118138851,-0.03280609743C-2.770881799e-17,6.927204497e-18,-1;-0.4113781212,-0.5084680266,-0.04121199278C2.77098417e-17,2.078238128e-17,1;0.4358446699,0.4787196222,-0.03859681473C2.078161349e-17,0,1;0.4113781212,0.5084680266,-0.04121199278C2.77133715e-17,2.078502863e-17,-1;-0.4587718253,-0.4372935581,-0.03500190137C-4.156358903e-17,-6.927264838e-18,-1;-0.4237274155,-0.4949604044,-0.04001932702C2.078179451e-17,-2.078179451e-17,1;0.4237274155,0.4949604044,-0.04001932702C-9.006157277e-17,-9.006157277e-17,-1;-0.4475814383,-0.4595527573,-0.03692878717C-2.77098417e-17,0,-1;-0.4358446699,-0.4787196222,-0.03859681473C";
  // testeReceberWifi(dados);
  //// xTaskCreate(controlMotor, "controlMotor", 1024 * 2, NULL, 5, NULL);
  //// xTaskCreate(stepControlMotor, "step", 1024 * 2, NULL, 5, NULL);    
  // for(uint16_t i = 1; i < 50000; i += 200)
  // {
    // pwm.update(7000);
    // vTaskDelay(500 / portTICK_PERIOD_MS);
  // }
  while(1){
    double valor = ultrassonicRead();
    double u = pid.OutputControl(pidReference, valor);
    pwm.update(u);
    std::stringstream ss; ss << valor << "," << pwm.getDuty() << "\r\n\0";
    if(err == ERR_OK)
      err = netconn_write(newconn, ss.str().c_str(), strlen(ss.str().c_str())+1, NETCONN_COPY);//envia um dado via wifi
  }
}



